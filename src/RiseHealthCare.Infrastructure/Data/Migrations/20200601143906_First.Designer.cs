// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RiseHealthCare.Infrastructure;

namespace RiseHealthCare.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200601143906_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RiseHealthCare.Domain.Management.InsuranceHealth", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("DiscountType")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("RiseHealthCare.Domain.Management.Professional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FiringDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("HiringDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Photo")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Professionals");
                });

            modelBuilder.Entity("RiseHealthCare.Domain.MedicalCare.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Information")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("InsuranceHealthId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Photo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RG")
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InsuranceHealthId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("RiseHealthCare.Domain.Management.Professional", b =>
                {
                    b.OwnsOne("RiseHealthCare.Domain.Management.ValueObjects.Council", "Council", b1 =>
                        {
                            b1.Property<Guid>("ProfessionalId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Estate")
                                .HasColumnType("varchar(15)");

                            b1.Property<string>("Name")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("RegistrationCode")
                                .HasColumnType("varchar(50)");

                            b1.HasKey("ProfessionalId");

                            b1.ToTable("Professionals");

                            b1.WithOwner()
                                .HasForeignKey("ProfessionalId");
                        });

                    b.OwnsMany("RiseHealthCare.Domain.Management.ValueObjects.Procedure", "Procedures", b1 =>
                        {
                            b1.Property<Guid>("ProfessionalId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Code")
                                .HasColumnType("int");

                            b1.Property<decimal>("Deduction")
                                .HasColumnType("decimal(15,2)");

                            b1.Property<string>("Description")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Name")
                                .HasColumnType("varchar(100)");

                            b1.Property<decimal>("Price")
                                .HasColumnType("decimal(15,2)");

                            b1.Property<string>("TypeDeduction")
                                .IsRequired()
                                .HasColumnType("varchar(20)");

                            b1.HasKey("ProfessionalId", "Id");

                            b1.ToTable("Procedure");

                            b1.WithOwner()
                                .HasForeignKey("ProfessionalId");
                        });

                    b.OwnsMany("RiseHealthCare.Domain.Shared.ValueObjects.Phone", "Phones", b1 =>
                        {
                            b1.Property<Guid>("ProfessionalId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<bool>("IsWhatsapp")
                                .HasColumnType("bit");

                            b1.Property<string>("Number")
                                .HasColumnType("varchar(20)");

                            b1.Property<string>("NumberType")
                                .IsRequired()
                                .HasColumnType("varchar(25)");

                            b1.HasKey("ProfessionalId", "Id");

                            b1.ToTable("Professionals_Phones");

                            b1.WithOwner()
                                .HasForeignKey("ProfessionalId");
                        });
                });

            modelBuilder.Entity("RiseHealthCare.Domain.MedicalCare.Patient", b =>
                {
                    b.HasOne("RiseHealthCare.Domain.Management.InsuranceHealth", "InsuranceHealth")
                        .WithMany("Patients")
                        .HasForeignKey("InsuranceHealthId");

                    b.OwnsOne("RiseHealthCare.Domain.Shared.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("PatientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Country")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Estate")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Neighborhood")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Number")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Street")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("varchar(100)");

                            b1.HasKey("PatientId");

                            b1.ToTable("Patients");

                            b1.WithOwner()
                                .HasForeignKey("PatientId");
                        });

                    b.OwnsOne("RiseHealthCare.Domain.Shared.ValueObjects.CPF", "CPF", b1 =>
                        {
                            b1.Property<Guid>("PatientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnName("CPF")
                                .HasColumnType("varchar(14)")
                                .HasMaxLength(14);

                            b1.HasKey("PatientId");

                            b1.HasIndex("Number")
                                .IsUnique()
                                .HasFilter("[CPF] IS NOT NULL");

                            b1.ToTable("Patients");

                            b1.WithOwner()
                                .HasForeignKey("PatientId");
                        });

                    b.OwnsOne("RiseHealthCare.Domain.Shared.ValueObjects.Phone", "Phone", b1 =>
                        {
                            b1.Property<Guid>("PatientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("IsWhatsapp")
                                .HasColumnType("bit");

                            b1.Property<string>("Number")
                                .HasColumnType("varchar(100)");

                            b1.Property<int>("NumberType")
                                .HasColumnType("int");

                            b1.HasKey("PatientId");

                            b1.ToTable("Patients");

                            b1.WithOwner()
                                .HasForeignKey("PatientId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
